{"version":3,"sources":["components/interface/PointInput.js","components/interface/Point.js","components/interface/Points.js","components/interface/Interface.js","components/MyMap.js","components/App.js","index.js"],"names":["PointInput","props","useState","pointName","setPointName","className","onSubmit","evt","preventDefault","onAdd","_id","Date","now","order","name","coords","value","onChange","target","type","Point","point","draggable","onDragStart","start","onDragLeave","end","onDragEnd","onDragOver","over","onDrop","drop","onClick","onDelete","Points","points","draggablePoint","setDraggablePoint","handleDragStart","handleDragEnd","classList","remove","handleOverDrag","add","handleDrop","onOrderChange","map","p","sort","a","b","Interface","popupIsOpen","onAddPoint","onDeletePoint","onChangePoints","MyMap","mapInstanceRef","setMapInstanceRef","state","center","zoom","controls","modules","instanceRef","onBoundsChange","setCoords","getCenter","defaultGeometry","options","properties","balloonContent","get","geometry","getCoordinates","onCoordsChange","App","setPoints","setPopupIsOpen","query","ns","load","newPoint","id","filter","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ab83fd4.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\n\r\nconst PointInput = (props) => {\r\n  const [pointName, setPointName] = useState('')\r\n\r\n  const handleChange = evt => {\r\n    setPointName(evt.target.value)\r\n  }\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    setPointName('')\r\n    props.onAdd({\r\n      _id: Date.now(),\r\n      order: Date.now(),\r\n      name: pointName,\r\n      coords: props.coords\r\n    })\r\n  }\r\n\r\n  return (\r\n    <article className=\"container\">\r\n      <form onSubmit={handleSubmit} className=\"form\" name={'addPointForm'}>\r\n        <input value={pointName} onChange={handleChange} type=\"text\" className=\"form__input\"/>\r\n      </form>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default PointInput;\r\n","import React from 'react';\r\n\r\nconst Point = ({ point, ...props }) => {\r\n  if (!point) return null\r\n\r\n  const handleClick = () => {\r\n    props.onDelete(point._id)\r\n  }\r\n\r\n  return (\r\n    <li\r\n      className=\"list__item point\"\r\n      draggable={true}\r\n      onDragStart={evt => props.start(evt, point)}\r\n      onDragLeave={evt => props.end(evt)}\r\n      onDragEnd={evt => props.end(evt)}\r\n      onDragOver={evt => props.over(evt)}\r\n      onDrop={evt => props.drop(evt, point)}\r\n    >{point.name}\r\n    <button className={\"point__delete-button button\"} onClick={handleClick} />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Point\r\n","import React, {useState} from 'react';\r\nimport Point from \"./Point\";\r\n\r\nconst Points = ({ points, ...props }) => {\r\n  const [draggablePoint, setDraggablePoint] = useState({});\r\n\r\n  if (!points) return null\r\n\r\n  const handleDragStart = (evt, point) => {\r\n        setDraggablePoint(point)\r\n  }\r\n\r\n  const handleDragEnd = (evt) => {\r\n    evt.target.classList.remove('list__item_hovered_true')\r\n  }\r\n\r\n  const handleOverDrag = (evt) => {\r\n    evt.preventDefault();\r\n    evt.target.classList.add('list__item_hovered_true')\r\n  }\r\n\r\n  const handleDrop = (evt, point) => {\r\n    evt.preventDefault();\r\n    props.onOrderChange(points.map(p => {\r\n      if (p._id === point._id) {\r\n        return {...p, order: draggablePoint.order}\r\n      }\r\n      if (p._id === draggablePoint._id) {\r\n        return {...p, order: point.order}\r\n      }\r\n      return p\r\n    }))\r\n    evt.target.classList.remove('list__item_hovered_true')\r\n  }\r\n\r\n  const sortPoints = (a, b) => {\r\n    return a.order - b.order\r\n  }\r\n\r\n  return (\r\n    <article className=\"container\">\r\n      <ul className=\"list list__points\">\r\n        {\r\n          points.sort(sortPoints).map(point => {\r\n            return <Point\r\n              key={ point._id }\r\n              point={ point }\r\n              onDelete={ props.onDelete }\r\n              start={ handleDragStart }\r\n              end={ handleDragEnd }\r\n              over={ handleOverDrag }\r\n              drop={ handleDrop }\r\n            />\r\n          })\r\n        }\r\n      </ul>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Points;\r\n","import React from 'react';\r\nimport PointInput from \"./PointInput\";\r\nimport Points from \"./Points\";\r\n\r\nconst Interface = (props) => {\r\n  return (\r\n    <section className={ `interface ${props.popupIsOpen && 'interface_visibility_visible' }` }>\r\n      <PointInput\r\n        onAdd={ props.onAddPoint }\r\n        coords={ props.coords }\r\n      />\r\n      <Points\r\n        points={ props.points }\r\n        onDelete={ props.onDeletePoint }\r\n        onOrderChange={ props.onChangePoints }\r\n      />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Interface;\r\n","import React, { useState } from 'react';\r\nimport { Map, Placemark, Polyline } from \"react-yandex-maps\";\r\n\r\nconst MyMap = ({ coords, ...props }) => {\r\n  const [mapInstanceRef, setMapInstanceRef] = useState(null);\r\n\r\n  const getCurrentCoords = () => {\r\n    props.setCoords(mapInstanceRef.getCenter())\r\n  }\r\n\r\n  return (\r\n    <Map\r\n      state={ {\r\n        center: coords,\r\n        zoom: 10,\r\n        controls: ['zoomControl']\r\n      } }\r\n      modules={ ['control.ZoomControl',] }\r\n      instanceRef={ map => setMapInstanceRef(map) }\r\n      className={ 'map__container map container' }\r\n      onBoundsChange={ getCurrentCoords }\r\n    >\r\n      {\r\n        props.points.map(point => {\r\n          return (\r\n            <Placemark\r\n              key={ point._id }\r\n              defaultGeometry={ point.coords }\r\n              options={ {\r\n                draggable: true\r\n              } }\r\n              properties={ {\r\n                balloonContent: point.name\r\n              } }\r\n              onDragEnd={\r\n                evt => {\r\n                  point.coords = evt.get('target').geometry.getCoordinates()\r\n                  props.onCoordsChange(point)\r\n                }\r\n              }\r\n            />\r\n          )\r\n        })\r\n      }\r\n      <Polyline\r\n        geometry={\r\n          props.points.map(point => {\r\n            return (\r\n              point.coords\r\n            )\r\n          })\r\n        }\r\n      />\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default MyMap\r\n","import React, { useState } from 'react';\r\nimport Interface from \"./interface/Interface\";\r\nimport MyMap from \"./MyMap\";\r\nimport { YMaps } from \"react-yandex-maps\";\r\n\r\nconst App = () => {\r\n  const [points, setPoints] = useState([]);\r\n  const [coords, setCoords] = useState([55.76, 37.64]);\r\n  const [popupIsOpen, setPopupIsOpen] = useState(false);\r\n\r\n  const handleAddNewPoint = newPoint => {\r\n    setPoints([...points, newPoint])\r\n  }\r\n\r\n  const handleDeletePoint = id => {\r\n    setPoints(state =>\r\n      state.filter(point =>\r\n        point._id === id ? point.remove : point))\r\n  }\r\n\r\n  const handleUpdatePointsCoords = (newPoint) => {\r\n    setPoints((state) => state.map((p) => p._id === newPoint._id ? newPoint : p));\r\n  }\r\n\r\n  const handlePopupButtonClick = () => {\r\n    setPopupIsOpen(!popupIsOpen)\r\n    console.log('click')\r\n  }\r\n\r\n  return (\r\n    <YMaps\r\n      query={ {\r\n        ns: 'use-load-option',\r\n        load: 'Map,Placemark,control.ZoomControl,geoObject.addon.balloon'\r\n      } }\r\n    >\r\n      <div className={ 'root' }>\r\n        <main className={ 'page' }>\r\n          <Interface\r\n            points={ points }\r\n            onAddPoint={ handleAddNewPoint }\r\n            onDeletePoint={ handleDeletePoint }\r\n            onChangePoints={ setPoints }\r\n            coords={ coords }\r\n            popupIsOpen={ popupIsOpen }\r\n          />\r\n          <MyMap\r\n            points={ points }\r\n            coords={ coords }\r\n            setCoords={ setCoords }\r\n            onCoordsChange={ handleUpdatePointsCoords }\r\n          />\r\n          <div className={ `popup ${popupIsOpen && 'popup_open'}` }/>\r\n          <button onClick={handlePopupButtonClick} className={`button popup__button ${popupIsOpen && 'popup__button_active'}`} type={'button'} />\r\n        </main>\r\n      </div>\r\n    </YMaps>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}